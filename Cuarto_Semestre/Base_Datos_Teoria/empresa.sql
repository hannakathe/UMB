CREATE DATABASE IF NOT EXISTS TIENDA_ZAPATOS; 
USE TIENDA_ZAPATOS; 

-- DROP DATABASE TIENDA_ZAPATOS;

-- CREAR TABLAS 

-- CLIENTES
CREATE TABLE IF NOT EXISTS CLIENTE (
    CEDULA_CLIENTE VARCHAR(20) PRIMARY KEY, 
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO VARCHAR(100) NOT NULL,
    CELULAR VARCHAR(15) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE, 
    DIRECCION VARCHAR(50) NOT NULL,
    FECHA_NACIMIENTO DATE
);

-- EMPLEADO
CREATE TABLE IF NOT EXISTS EMPLEADO(
    CODIGO_EMPLEADO CHAR(5) PRIMARY KEY,
    CEDULA_EMPLEADO VARCHAR(20) UNIQUE,
    NOMBRE VARCHAR(100) NOT NULL, 
    APELLIDO VARCHAR(100) NOT NULL,
    CELULAR VARCHAR(10) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE, 
    DIRECCION VARCHAR(50) NOT NULL,
    FECHA_NACIMIENTO DATE
);

-- FACTURA_VENTA
CREATE TABLE IF NOT EXISTS FACTURA_VENTA(
    NUMERO_FACTURA INT AUTO_INCREMENT PRIMARY KEY,
    CEDULA_CLIENTE VARCHAR(20) NOT NULL,
    CODIGO_EMPLEADO CHAR(5) NOT NULL,
    FOREIGN KEY(CEDULA_CLIENTE) REFERENCES CLIENTE(CEDULA_CLIENTE),
    FOREIGN KEY(CODIGO_EMPLEADO) REFERENCES EMPLEADO(CODIGO_EMPLEADO),
    FECHA_CREACION DATE
);

-- CARGO
CREATE TABLE IF NOT EXISTS CARGO(
    NUMERO_CARGO VARCHAR(10) PRIMARY KEY,
    NOMBRE_CARGO VARCHAR(100) NOT NULL,
    RANGO_SALARIAL DECIMAL(10,2) NOT NULL
);

-- PRODUCTO
CREATE TABLE IF NOT EXISTS PRODUCTO(
    ID_PRODUCTO VARCHAR(10) PRIMARY KEY,
    ID_TIPO_PRODUCTO VARCHAR(10) NOT NULL,
    FOREIGN KEY(ID_TIPO_PRODUCTO) REFERENCES TIPO_PRODUCTO(ID_TIPO_PRODUCTO),
    DESCRIPCION VARCHAR(100),
    MARCA_PRODUCTO VARCHAR(100),
    CANTIDAD_STOCK INT NOT NULL CHECK(CANTIDAD_STOCK>=0),
    VALOR_UNITARIO DECIMAL(10,2) NOT NULL,
    IVA DECIMAL(4,2) NOT NULL CHECK (IVA>=0)
);

-- CONTRATO
CREATE TABLE IF NOT EXISTS CONTRATO(
    NUMERO_CONTRATO VARCHAR(20) PRIMARY KEY,
    FECHA_REALIZACION DATE,
    FECHA_INICIO DATE,
    FECHA_FIN DATE,
    FECHA_TERMINACION DATE,
    SALARIO DECIMAL(10,2) NOT NULL CHECK(SALARIO>=0),
    NUMERO_CARGO VARCHAR(10) NOT NULL,
    CODIGO_EMPLEADO CHAR(5) NOT NULL,
    FOREIGN KEY(NUMERO_CARGO) REFERENCES CARGO(NUMERO_CARGO),
    FOREIGN KEY(CODIGO_EMPLEADO) REFERENCES EMPLEADO(CODIGO_EMPLEADO)
);

-- TIPO_PRODUCTO
CREATE TABLE IF NOT EXISTS TIPO_PRODUCTO(
    ID_TIPO_PRODUCTO VARCHAR(10) PRIMARY KEY,
    NOMBRE_TIPO_PRODUCTO VARCHAR(100)
);

-- FORMA_PAGO
CREATE TABLE IF NOT EXISTS FORMA_PAGO(
    ID_FORMA_PAGO VARCHAR(100) PRIMARY KEY,
    NOMBRE_FORMA_PAGO VARCHAR(100)
);

-- DETALLE_FACTURA
CREATE TABLE IF NOT EXISTS DETALLE_FACTURA(
    ID_DETALLE_FACTURA_VENTA INT PRIMARY KEY AUTO_INCREMENT,
    CANTIDAD INT NOT NULL CHECK (CANTIDAD>0),
    ID_PRODUCTO VARCHAR(10) NOT NULL,
    NUMERO_FACTURA INT NOT NULL,
    FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY(NUMERO_FACTURA) REFERENCES FACTURA_VENTA(NUMERO_FACTURA)
);

-- FACTURA_PAGO
CREATE TABLE IF NOT EXISTS FACTURA_PAGO(
    ID_FACTURA_PAGO INT PRIMARY KEY AUTO_INCREMENT,
    ID_FORMA_PAGO VARCHAR(100) NOT NULL,
    NUMERO_FACTURA INT NOT NULL,
    FOREIGN KEY(ID_FORMA_PAGO) REFERENCES FORMA_PAGO(ID_FORMA_PAGO),
    FOREIGN KEY(NUMERO_FACTURA) REFERENCES FACTURA_VENTA(NUMERO_FACTURA)
);

-- CELULAR_EMPLEADO
CREATE TABLE IF NOT EXISTS CELULAR_EMPLEADO(
    ID_CELULAR_EMPLEADO INT PRIMARY KEY,
    TIPO VARCHAR(20),
    NUMERO_CELULAR VARCHAR(15),
    CODIGO_EMPLEADO CHAR(5) NOT NULL,
    FOREIGN KEY(CODIGO_EMPLEADO) REFERENCES EMPLEADO(CODIGO_EMPLEADO)
);


-- INGRESO DE DATOS

-- CLIENTE
INSERT INTO CLIENTE VALUES
('1001','Carlos','Pérez','3001234567','carlos.perez@example.com','Calle 10 #5-12','1990-05-15'),
('1002','Ana','Gómez','3109876543','ana.gomez@example.com','Carrera 45 #12-34','1995-08-20'),
('1003','Luis','Martínez','3012223344','luis.martinez@example.com','Av. Siempre Viva 123','1988-11-10'),
('1004','María','Rodríguez','3205566778','maria.rodriguez@example.com','Calle 20 #15-30','1992-02-25'),
('1005','Jorge','Ramírez','3156789900','jorge.ramirez@example.com','Carrera 7 #45-89','1985-07-01');

-- EMPLEADO
INSERT INTO EMPLEADO VALUES
(1,'2001','Pedro','López','3011112233','pedro.lopez@example.com','Calle 30 #12-45','1980-01-10'),
(2,'2002','Laura','Fernández','3024445566','laura.fernandez@example.com','Carrera 60 #20-50','1993-09-14'),
(3,'2003','Andrés','Sánchez','3037778899','andres.sanchez@example.com','Calle 40 #18-22','1990-06-22'),
(4,'2004','Sofía','Castro','3049998877','sofia.castro@example.com','Av. Libertador 45-10','1987-03-19'),
(5,'2005','Diego','Moreno','3056665544','diego.moreno@example.com','Carrera 15 #100-25','1995-12-05');

-- CARGO
INSERT INTO CARGO VALUES
('C01','Gerente',5000000),
('C02','Vendedor',2000000),
('C03','Cajero',1800000),
('C04','Supervisor',3000000),
('C05','Auxiliar Bodega',1500000);

-- CONTRATO
INSERT INTO CONTRATO VALUES
('CON001','2022-01-10','2022-02-01','2023-02-01',NULL,5000000,'C01',1),
('CON002','2022-02-12','2022-03-01','2023-03-01',NULL,2000000,'C02',2),
('CON003','2022-03-15','2022-04-01','2023-04-01',NULL,1800000,'C03',3),
('CON004','2022-04-20','2022-05-01','2023-05-01',NULL,3000000,'C04',4),
('CON005','2022-05-25','2022-06-01','2023-06-01',NULL,1500000,'C05',5);

-- TIPO_PRODUCTO
INSERT INTO TIPO_PRODUCTO VALUES
('TP01','Deportivos'),
('TP02','Casuales'),
('TP03','Sandalias'),
('TP04','Botas'),
('TP05','Formales');

-- PRODUCTO
INSERT INTO PRODUCTO VALUES
('P001','TP01','Zapatillas running','Nike',50,250000,0.19),
('P002','TP02','Zapatos casuales cuero','Clarks',30,300000,0.19),
('P003','TP03','Sandalias playa','Adidas',40,120000,0.19),
('P004','TP04','Botas trekking','Columbia',25,400000,0.19),
('P005','TP05','Zapatos formales charol','Bata',20,350000,0.19);

-- FACTURA_VENTA
INSERT INTO FACTURA_VENTA (CEDULA_CLIENTE, CODIGO_EMPLEADO, FECHA_CREACION) VALUES
('1001',1,'2023-01-15'),
('1002',2,'2023-01-20'),
('1003',3,'2023-02-05'),
('1004',4,'2023-02-10'),
('1005',5,'2023-03-01');

-- DETALLE_FACTURA
INSERT INTO DETALLE_FACTURA (CANTIDAD, ID_PRODUCTO, NUMERO_FACTURA) VALUES
(2,'P001',1),
(1,'P002',2),
(3,'P003',3),
(1,'P004',4),
(2,'P005',5);

-- FORMA_PAGO
INSERT INTO FORMA_PAGO VALUES
('FP01','Efectivo'),
('FP02','Tarjeta Débito'),
('FP03','Tarjeta Crédito'),
('FP04','Transferencia Bancaria'),
('FP05','Cheque');

-- FACTURA_PAGO
INSERT INTO FACTURA_PAGO (ID_FORMA_PAGO, NUMERO_FACTURA) VALUES
('FP01',1),
('FP02',2),
('FP03',3),
('FP04',4),
('FP05',5);

-- CELULAR_EMPLEADO
INSERT INTO CELULAR_EMPLEADO VALUES
(1,'Personal','3001112233',1),
(2,'Trabajo','3004445566',2),
(3,'Personal','3007778899',3),
(4,'Trabajo','3009998877',4),
(5,'Personal','3006665544',5);


--CONSULTAS DE TABLAS

SELECT * FROM CLIENTE;
SELECT * FROM EMPLEADO;
SELECT * FROM FACTURA_VENTA;
SELECT * FROM CARGO;
SELECT * FROM PRODUCTO;
SELECT * FROM CONTRATO;
SELECT * FROM TIPO_PRODUCTO;
SELECT * FROM FORMA_PAGO;
SELECT * FROM DETALLE_FACTURA;
SELECT * FROM FACTURA_PAGO;
SELECT * FROM CELULAR_EMPLEADO;


-- RELACIONES DE TABLAS 
-- Relaciones de FACTURA_VENTA
ALTER TABLE FACTURA_VENTA 
  ADD CONSTRAINT fk_factura_cliente FOREIGN KEY (CEDULA_CLIENTE) REFERENCES CLIENTE(CEDULA_CLIENTE),
  ADD CONSTRAINT fk_factura_empleado FOREIGN KEY (CODIGO_EMPLEADO) REFERENCES EMPLEADO(CODIGO_EMPLEADO);

-- Relaciones de CONTRATO
ALTER TABLE CONTRATO
  ADD CONSTRAINT fk_contrato_cargo FOREIGN KEY (NUMERO_CARGO) REFERENCES CARGO(NUMERO_CARGO),
  ADD CONSTRAINT fk_contrato_empleado FOREIGN KEY (CODIGO_EMPLEADO) REFERENCES EMPLEADO(CODIGO_EMPLEADO);

-- Relaciones de PRODUCTO
ALTER TABLE PRODUCTO
  ADD CONSTRAINT fk_producto_tipo FOREIGN KEY (ID_TIPO_PRODUCTO) REFERENCES TIPO_PRODUCTO(ID_TIPO_PRODUCTO);

-- Relaciones de DETALLE_FACTURA
ALTER TABLE DETALLE_FACTURA
  ADD CONSTRAINT fk_detalle_producto FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
  ADD CONSTRAINT fk_detalle_factura FOREIGN KEY (NUMERO_FACTURA) REFERENCES FACTURA_VENTA(NUMERO_FACTURA);

-- Relaciones de FACTURA_PAGO
ALTER TABLE FACTURA_PAGO
  ADD CONSTRAINT fk_facturapago_forma FOREIGN KEY (ID_FORMA_PAGO) REFERENCES FORMA_PAGO(ID_FORMA_PAGO),
  ADD CONSTRAINT fk_facturapago_factura FOREIGN KEY (NUMERO_FACTURA) REFERENCES FACTURA_VENTA(NUMERO_FACTURA);

-- Relaciones de CELULAR_EMPLEADO
ALTER TABLE CELULAR_EMPLEADO
  ADD CONSTRAINT fk_celular_empleado FOREIGN KEY (CODIGO_EMPLEADO) REFERENCES EMPLEADO(CODIGO_EMPLEADO);
